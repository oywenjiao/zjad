def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def replaceInManifest(manifestPath, fromString, toString){
    def manifestContent = file(manifestPath).getText('UTF-8')
    manifestContent = manifestContent.replace(fromString, toString)
    file(manifestPath).write(manifestContent, 'UTF-8')
}
android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.zjad_example"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        android.applicationVariants.all { variant ->
            def processManifestTask = project.tasks.getByName("process${variant.name.capitalize()}Manifest")
            processManifestTask.doLast { pmt ->
                variant.outputs.each { output ->
                    String manifestPath = output.processResources.manifestFile
                    if (new File(manifestPath).exists())
                        replaceInManifest(manifestPath, 'ZJ_AUTHORITY', variant.applicationId)
                }
            }
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    //noinspection GradleCompatible
    implementation "com.android.support:support-v4:28.0.0"

    implementation(name: 'zj_kssdk_3.3.18', ext: 'aar')
    implementation(name: 'zj_sdk_2.3.6', ext: 'aar')
}
